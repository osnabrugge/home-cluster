---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app bazarr
  namespace: media-automation
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 0.2.2
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 15m
  install:
    createNamespace: true
    remediation:
      retries: 5
  upgrade:
    remediation:
      retries: 5
  values:
    global:
      nameOverride: *app
    image:
      repository: ghcr.io/k8s-at-home/bazarr
      tag: v1.1.1
    service:
      main:
        ports:
          http:
            port: 6767
    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          # external-dns.home.arpa/enabled: "true"
          hajimari.io/enable: "true"
          hajimari.io/icon: "closed-caption"
          nginx.ingress.kubernetes.io/configuration-snippet: |
            proxy_set_header Accept-Encoding "";
            sub_filter '</head>' '<link rel="stylesheet" type="text/css" href="https://theme-park.${SECRET_DOMAIN}/css/base/bazarr/nord.css"></head>';
            sub_filter_once on;
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
          - secretName: "${CLUSTER_CERT_SECRET}"
    initContainers:
      init-permission:
        image: busybox:1.35.0
        imagePullPolicy: IfNotPresent
        command:
          - sh
          - -c
        args:
          - chown -R 568:568 /media;
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: media
            mountPath: /media
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
    persistence:
      config:
        enabled: true
        existingClaim: bazarr-config
        mountPath: /config
      media:
        enabled: true
        existingClaim: shared-media
        mountPath: /media
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
    resources:
      requests:
        cpu: 50m
        memory: 200Mi
