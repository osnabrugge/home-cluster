---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: omada-controller
  namespace: networking
spec:
  interval: 5m
  chart:
    spec:
      chart: omada-controller
      version: 4.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: mbentley/omada-controller
      tag: "5.5"

    env:
      TZ: ${TIMEZONE}

    ingress:
      main:
        enabled: true
        ingressClassName: "nginx"
        annotations:
          coredns.io/hostname: &host "omada.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: "letsencrypt-staging"
          hajimari.io/enable: "true"
          hajimari.io/icon: "router-wireless-settings"
          # TODO: #331 configure nginx redirect rules and headers
          # Add a proxy redirect because omada expects it and will redirect to the ssl port if it's not explicitly in the URL
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          nginx.ingress.kubernetes.io/proxy-ssl-verify: "off"
          nginx.ingress.kubernetes.io/upstream-vhost: "omada.${SECRET_DOMAIN}"
          # nginx.ingress.kubernetes.io/ssl-passthrough: "true"
          # nginx.ingress.kubernetes.io/ssl-redirect: "true"

          # nginx.ingress.kubernetes.io/proxy-redirect-from: "~https://(.+):8043/(.+)/login$"
          # nginx.ingress.kubernetes.io/proxy-redirect-to: "https://$http_host/$2/login"

          # Add a few more headers to make Omada happy
          # nginx.ingress.kubernetes.io/configuration-snippet: |
          #   proxy_set_header        X-Real-IP                 $remote_addr;
          #   proxy_set_header        X-Forwarded-For           $proxy_add_x_forwarded_for;
          #   proxy_set_header        Cookie                    $http_cookie;
          #   proxy_set_header        X-Forwarded-Proto         $scheme;
          #   proxy_set_header        Upgrade                   $http_upgrade;
          #   proxy_set_header        Connection                "upgrade";
        hosts:
          - host: *host
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
            secretName: "{{ .Release.Name }}-tls"

    service:
    main:
      ports:
        main:
          port: 443
          protocol: HTTPS
          targetPort: 443


    persistence:
      data:
        enabled: true
        mountPath: /opt/tplink/EAPController/data
        existingClaim: omada-data-pvc
      work:
        enabled: true
        mountPath: /opt/tplink/EAPController/work
        existingClaim: omada-work-pvc
      logs:
        enabled: true
        mountPath: /opt/tplink/EAPController/logs
        existingClaim: omada-logs-pvc

    resources:
      requests:
        memory: 1200M
        cpu: 1200m
      limits:
        memory: 1500M
